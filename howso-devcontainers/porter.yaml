schemaVersion: 1.0.0
name: com.howso.devcontainer
description: ""
version: 1.0.1
registry: howso.azurecr.io
images:
  busybox:
    name: busybox
    description: ""
    imagetype: docker
    repository: docker.io/busybox
    tag: latest
    digest: ""
  devcontainer:
    name: howso
    description: ""
    imagetype: docker
    repository: ghcr.io/howsoai/howso
    tag: 18.1.2-python3.9
    digest: ""
mixins:
- exec
- helm3
install:
- helm3:
    name: com.howso.devcontainer
    description: ""
    chart: ./howso-devcontainer
    set: {}
uninstall:
- exec:
    description: Not implemented
    command: echo 'Not implemented'
parameters: []
custom:
  deploymentrestrictions:
    mincores: 0
    minnodes: 0
    minkubernetesversion: ""
    requiregpunodes: false
    openshiftallowed: false
    nodetype: ""
    newclusterrequired: false
  clusterarmtemplate: 
  uidefinition: 
  helmchart: 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
  extensionregistrationparameters: eyJkZWZhdWx0U2NvcGUiOiJjbHVzdGVyIiwibmFtZXNwYWNlIjoiaG93c28iLCJzdXBwb3J0ZWRDbHVzdGVyVHlwZXMiOnt9fQ
  packagingtoolversion: 1.3.12
  testparameterfile: ""
  skipdeployment: false
